import React,{useEffect,useState} from 'react'
import Head from 'next/head'
import {useRouter} from 'next/router';
import Footer from '../Footer';
import jwt_decode from "jwt-decode";
import Header from '../Header'
import { useSelector, useDispatch } from 'react-redux';
import {AppDispatch} from "../../store/store"
import {setLogin,fetchUserById} from "../../store/reducers/loginSlice";
import Cookies from 'js-cookie'
import styles from '../../../styles/Home.module.scss'
function Layout(props:any) {
    const [isLoading,setIsLoading] = useState(false);
    const dispatch = useDispatch<AppDispatch>();
    const router = useRouter()
    // 
    // const loginData = useSelector((state:any) => state.login);
    
    useEffect(() => {
      getUserData();
    },[]);
     
    const getUserData = async() => {
      setIsLoading(true)
      
      if(Cookies.get('token')){
        var token_data: any = jwt_decode(Cookies.get('token') || "");
        if(token_data.sub && token_data.sub > 0){
         await dispatch(setLogin())
         await dispatch(fetchUserById(parseInt(token_data.sub)))
         setIsLoading(false)
        }
        else{
          setIsLoading(false)
        }

      }else{
        setIsLoading(false)
      }
    }
  
   
    // if(isLoading) {
    //  return (
    //       <>
    //         <h1>LOADING....</h1>
    //       </>
    //  )
    // }

    

  return (
    
    <div className={styles.container}>
      {
           isLoading ? 
           <>
           <h2>Loading...</h2>
           </>
           :
           <>
              <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
              </Head>
              {router.pathname !== "/login" ?
                <>
                <Header/>
                    <main className={styles.main}>
                          {props.children}
                    </main>

                    <footer className={styles.footer}>
                      <Footer/>
                    </footer>
                    </>
                :
                    <div>
                      {props.children}
                    </div>
              }
           </>

      }
      
    
       </div>
 
  )
}

export default Layout